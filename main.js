(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var t=function(){function t(e,n,o,r,i,c,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._config=e,this._cardSelector=n,this._cardData=o,this._currentUser=r,this._handleLikeClick=i,this._handleDeleteClick=c,this._handleCardClick=a}var n,o;return n=t,(o=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.querySelector(this._config.cardSelector).cloneNode(!0)}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(this._config.likeSelector).addEventListener("click",(function(){e._handleLikeClick()})),this._element.querySelector(this._config.placeDeleteSelector).addEventListener("click",(function(){e._handleDeleteClick()})),this._element.querySelector(this._config.placeImageSelector).addEventListener("click",(function(){e._handleCardClick(e._cardData.link,e._cardData.name)}))}},{key:"deleteCard",value:function(){this._element.remove()}},{key:"updateLike",value:function(e){this._element.querySelector(".place__like").classList.toggle(this._config.likeActiveClass),this._element.querySelector(".place__likes").textContent=e.likes.length}},{key:"generateCard",value:function(){var e=this;return this._element=this._getTemplate(),this._getTemplate(),this._setEventListeners(),this._element.querySelector(this._config.placeTitleSelector).textContent=this._cardData.name,this._element.querySelector(this._config.placeImageSelector).src=this._cardData.link,this._element.querySelector(this._config.placeImageSelector).alt=this._cardData.name,this._element.querySelector(".place__likes").textContent=this._cardData.likes.length,this._cardData.likes.some((function(t){return t._id===e._currentUser._id}))&&this._element.querySelector(".place__like").classList.add(this._config.likeActiveClass),this._cardData.owner._id===this._currentUser._id&&this._element.querySelector(".place__delete").classList.add("place__delete_active"),this._element}}])&&e(n.prototype,o),t}();function n(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var r=function(){function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o(this,"_hideInputError",(function(e){var t=r._formElement.querySelector("#".concat(e.id,"-error"));t.textContent="",e.classList.remove(r._config.errorInputClass),t.classList.remove(r._config.errorActiveClass)})),o(this,"_showInputError",(function(e){var t=r._formElement.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,e.classList.add(r._config.errorInputClass),t.classList.add(r._config.errorActiveClass)})),o(this,"_checkInputValidity",(function(e){e.validity.valid?r._hideInputError(e):r._showInputError(e)})),o(this,"_hasInvalidInput",(function(){return r._inputList.some((function(e){return!e.validity.valid}))})),o(this,"toggleButtonState",(function(){r._hasInvalidInput()?r._buttonElement.disabled=!0:r._buttonElement.disabled=!1})),o(this,"_setEventListeners",(function(){r._inputList.forEach((function(e){e.addEventListener("input",(function(){r._checkInputValidity(e),r.toggleButtonState()}))}))})),o(this,"enableValidation",(function(){r._setEventListeners()})),this._config=t,this._formElement=document.querySelector(n),this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._formElement.querySelector(this._config.submitSelector)}var t,r;return t=e,(r=[{key:"resetValidation",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)})),this.toggleButtonState()}}])&&n(t.prototype,r),e}();function i(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var c=function(){function e(t,n){var o=t.items,r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._itemArray=o,this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._itemArray.forEach((function(t){e._renderer(t)}))}},{key:"addInitialItems",value:function(e){this._container.append(e)}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&i(t.prototype,n),e}();function a(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var u=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._popup=document.querySelector(n),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add(this._config.popupActiveClass),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove(this._config.popupActiveClass),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){e.key===this._config.ESCAPE_KEY&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(this._config.closeButtonSelector).addEventListener("click",(function(){e.close()})),this._popup.addEventListener("mousedown",(function(t){t.target===e._popup&&e.close()}))}}])&&a(t.prototype,n),e}();function l(e){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function f(e,t,n){return(f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=d(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function p(e,t){return(p=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function h(e,t){return!t||"object"!==l(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var _=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&p(e,t)}(c,e);var t,n,o,r,i=(o=c,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=d(o);if(r){var n=d(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return h(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,e,t))._popupImg=document.querySelector(n._config.popupPhotoImgSelector),n._popupTitle=document.querySelector(n._config.popupPhotoTitleSelector),n}return t=c,(n=[{key:"open",value:function(e,t){f(d(c.prototype),"open",this).call(this),this._popupImg.src=e,this._popupImg.alt=t,this._popupTitle.textContent=t}}])&&s(t.prototype,n),c}(u);function y(e){return(y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function m(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function v(e,t,n){return(v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function b(e,t){return(b=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function S(e,t){return!t||"object"!==y(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function g(e){return(g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var k=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&b(e,t)}(c,e);var t,n,o,r,i=(o=c,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=g(o);if(r){var n=g(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function c(e,t){var n,o=t.popupSelector,r=t.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,e,o))._handleFormSubmit=r,n._inputList=n._popup.querySelectorAll(n._config.inputSelector),n._form=n._popup.querySelector(n._config.formSelector),n}return t=c,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.id]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;v(g(c.prototype),"setEventListeners",this).call(this),this._popup.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}},{key:"close",value:function(){v(g(c.prototype),"close",this).call(this),this._form.reset()}}])&&m(t.prototype,n),c}(u);function E(e){return(E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function C(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function w(e,t,n){return(w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=O(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(n):r.value}})(e,t,n||e)}function j(e,t){return(j=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function P(e,t){return!t||"object"!==E(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function O(e){return(O=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&j(e,t)}(c,e);var t,n,o,r,i=(o=c,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=O(o);if(r){var n=O(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return P(this,e)});function c(e,t){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),i.call(this,e,t)}return t=c,(n=[{key:"setEventListeners",value:function(){var e=this;w(O(c.prototype),"setEventListeners",this).call(this),this._popup.addEventListener("submit",(function(t){t.preventDefault(),e._test(),e.close()}))}},{key:"setConfirmHandler",value:function(e){return this._test=e}}])&&C(t.prototype,n),c}(u);function I(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var T=function(){function e(t){var n=t.nameSelector,o=t.jobSelector,r=t.avatarSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._job=document.querySelector(o),this._avatar=document.querySelector(r)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this._userValues={},this._userValues[this._name.id]=this._name.textContent,this._userValues[this._job.id]=this._job.textContent,this._userValues}},{key:"setUserInfo",value:function(e){this._name.textContent=e.name,this._job.textContent=e.about}},{key:"setUserAvatar",value:function(e){this._avatar.src=e.avatar}}])&&I(t.prototype,n),e}();function q(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var A=document.querySelector(".profile__button_type_user"),U=document.querySelector(".profile__button_type_place"),R=document.querySelector(".profile__avatar"),D=document.querySelector(".popup__input_name"),x=document.querySelector(".popup__input_job"),V={errorActiveClass:"popup__input-error_active",errorInputClass:"popup__input_invalid",errorInputSelector:".popup__input-error",inputSelector:".popup__input",submitSelector:".popup__submit",profileEditorSelector:".profile-editor",placeEditorSelector:".place-editor",avatarEditorSelector:".avatar-editor",nameSelector:".profile__name",jobSelector:".profile__job",cardTemplateDefault:".card-template_type_default",cardsContainerSelector:".places",popupPhotoSelector:"#photo",popupProfileSelector:"#profile",popupPlaceSelector:"#newplace",popupAvatarSelector:"#avatar",poupDeleteSelector:"#delete",cardSelector:".place",likeSelector:".place__like",likeActiveClass:"place__like_active",placeDeleteSelector:".place__delete",placeImageSelector:".place__image",placeTitleSelector:".place__title",popupActiveClass:"popup_opened",ESCAPE_KEY:"Escape",closeButtonSelector:".popup__close",formSelector:".form",popupPhotoImgSelector:".popup__img",popupPhotoTitleSelector:".popup__title-img",avatarSelector:".profile__avatar",methodGET:"GET",methodPUT:"PUT",methodDELETE:"DELETE",methodPATCH:"PATCH",methodPOST:"POST",urlLikes:"/cards/likes/",urlMe:"/users/me",urlCards:"/cards/",urlAvatar:"/users/me/avatar",token:"4caf9c4d-a302-411a-9ffa-2ef00699d265",loadingText:"Сохранение..."};function B(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=e&&("undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"]);if(null!=n){var o,r,i=[],c=!0,a=!1;try{for(n=n.call(e);!(c=(o=n.next()).done)&&(i.push(o.value),!t||i.length!==t);c=!0);}catch(e){a=!0,r=e}finally{try{c||null==n.return||n.return()}finally{if(a)throw r}}return i}}(e,t)||function(e,t){if(e){if("string"==typeof e)return z(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?z(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function z(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}function F(e,n){var o=new t(V,V.cardTemplateDefault,e,n,(function(){e.likes.some((function(e){return e._id===n._id}))?X.updateLike(V.urlLikes,V.methodDELETE,V.token,e._id).then((function(t){return o.updateLike(t),e.likes=t.likes})).catch((function(e){console.log(e)})):X.updateLike(V.urlLikes,V.methodPUT,V.token,e._id).then((function(t){return o.updateLike(t),e.likes=t.likes})).catch((function(e){console.log(e)}))}),(function(){W.setConfirmHandler((function(){X.deleteCard(V.urlCards,V.methodDELETE,V.token,e._id).then((function(){o.deleteCard()})).catch((function(e){console.log(e)})).finally((function(){W.close()}))})),W.open()}),(function(e,t){K.open(e,t)}));return o.generateCard()}A.addEventListener("click",(function(){var e;e=G.getUserInfo(),D.value=e.name,x.value=e.about,H.resetValidation(),Y.open()})),U.addEventListener("click",(function(){M.resetValidation(),$.open()})),R.addEventListener("click",(function(){N.resetValidation(),Q.open()}));var H=new r(V,V.profileEditorSelector),M=new r(V,V.placeEditorSelector),N=new r(V,V.avatarEditorSelector),G=new T({nameSelector:V.nameSelector,jobSelector:V.jobSelector,avatarSelector:V.avatarSelector}),J=new c({items:[],renderer:function(e){J.addItem(F(e))}},V.cardsContainerSelector),K=new _(V,V.popupPhotoSelector),Y=new k(V,{popupSelector:V.popupProfileSelector,handleFormSubmit:function(e){X.submitStart(Y._form),X.patchUserInfo(V.urlMe,V.methodPATCH,V.token,e).then((function(e){G.setUserInfo(e)})).catch((function(e){console.log(e)})).finally((function(){Y.close(),X.submitEnd(Y._form)}))}}),$=new k(V,{popupSelector:V.popupPlaceSelector,handleFormSubmit:function(e){X.submitStart($._form),Promise.all([X.getUserInfo(V.urlMe,V.methodGET,V.token),X.postNewCard(V.urlCards,V.methodPOST,V.token,çitem)]).then((function(e){var t=B(e,2),n=t[0],o=t[1];J.addItem(F(o,n))})).catch((function(e){console.log(e)})).finally((function(){$.close(),X.submitEnd($._form)}))}}),Q=new k(V,{popupSelector:V.popupAvatarSelector,handleFormSubmit:function(e){X.submitStart(Q._form),X.patchUserAvatar(V.urlAvatar,V.methodPATCH,V.token,e.url).then((function(e){G.setUserAvatar(e)})).catch((function(e){console.log(e)})).finally((function(){Q.close(),X.submitEnd(Q._form)}))}}),W=new L(V,V.poupDeleteSelector),X=new function e(t,n){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),q(this,"_search",(function(e,t,n){return fetch("".concat(o._option.baseUrl).concat(e),{method:"".concat(t),headers:{authorization:"".concat(n),"Content-Type":"application/json"}})})),q(this,"_searchCardId",(function(e,t,n,r){return fetch("".concat(o._option.baseUrl).concat(e).concat(r),{method:"".concat(t),headers:{authorization:"".concat(n),"Content-Type":"application/json"}})})),q(this,"submitStart",(function(e){return o._text=e.querySelector(o._config.submitSelector).textContent,e.querySelector(o._config.submitSelector).textContent=o._config.loadingText,o._text})),q(this,"submitEnd",(function(e){e.querySelector(o._config.submitSelector).textContent=o._text})),q(this,"getUserInfo",(function(e,t,n){return o._search(e,t,n).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}))})),q(this,"getInitialCards",(function(e,t,n){return o._search(e,t,n).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}))})),q(this,"patchUserInfo",(function(e,t,n,r){return fetch("".concat(o._option.baseUrl).concat(e),{method:"".concat(t),headers:{authorization:"".concat(n),"Content-Type":"application/json"},body:JSON.stringify({name:"".concat(r.name),about:"".concat(r.about)})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}))})),q(this,"postNewCard",(function(e,t,n,r){return fetch("".concat(o._option.baseUrl).concat(e),{method:"".concat(t),headers:{authorization:"".concat(n),"Content-Type":"application/json"},body:JSON.stringify({name:"".concat(r.place),link:"".concat(r.url)})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}))})),q(this,"deleteCard",(function(e,t,n,r){return o._searchCardId(e,t,n,r).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}))})),q(this,"updateLike",(function(e,t,n,r){return o._searchCardId(e,t,n,r).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}))})),q(this,"patchUserAvatar",(function(e,t,n,r){return fetch("".concat(o._option.baseUrl).concat(e),{method:"".concat(t),headers:{authorization:"".concat(n),"Content-Type":"application/json"},body:JSON.stringify({avatar:"".concat(r)})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}))})),this._config=t,this._option=n}(V,{baseUrl:"https://mesto.nomoreparties.co/v1/cohort-25",method:"",headers:{authorization:V.token,"Content-Type":"application/json"}});H.enableValidation(),M.enableValidation(),N.enableValidation(),Y.setEventListeners(),$.setEventListeners(),Q.setEventListeners(),K.setEventListeners(),W.setEventListeners(),J.renderItems(),Promise.all([X.getUserInfo(V.urlMe,V.methodGET,V.token),X.getInitialCards(V.urlCards,V.methodGET,V.token)]).then((function(e){var t=B(e,2),n=t[0],o=t[1];G.setUserInfo(n),G.setUserAvatar(n),o.forEach((function(e){J.addInitialItems(F(e,n))}))})).catch((function(e){console.log(e)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,